#!/usr/bin/env perl
use v5.10;
use strict;

=head1 NAME

create_bitbucket - Create a BitBucket repo from the command line

=head1 SYNOPSIS

	# I have these set up in my secrets store
	% export GITLAB_USER=briandfoy
	% export GITLAB_TOKEN=...
	% create_gitlab

=head1 DESCRIPTION

=cut

my $user  = $ENV{GITLAB_USER} // die "Set GITLAB_USER to your GitLab account name\n";
my $token = $ENV{GITLAB_TOKEN} // die "Set GITLAB_TOKEN to your BitBucket app password\nhttps://docs.gitlab.com/ee/user/profile/personal_access_tokens.html\n";
my $repo = $ARGV[0] // do {
	state $r1 = require File::Basename;
	state $r2 = require Cwd;
	File::Basename::basename(Cwd::getcwd());
	};

require Mojo::UserAgent;
my $ua = Mojo::UserAgent->new;

my $tx = $ua->post(
	'https://gitlab.com/api/v4/projects',
	{
		'Content-type'  => 'application/json',
		'Authorization' => "Bearer $token",
	},
	json => { name => $repo, visibility => 'public' }
	);

if( $tx->result->is_success ) {
	say "Created GitLab repo <$user/$repo>";

	my( $clone ) = $tx->result->json->{ssh_url_to_repo};

	say "Clone URL is <$clone>";

	if( -e '.git' ) {
		# https://github.com/briandfoy/git-default-branch
		chomp( my $default_branch = `git default-branch` );
		$default_branch = length $default_branch ? $default_branch : 'master';

		system 'git', 'remote', 'add', 'gitlab', $clone;
		system 'git', 'push', 'gitlab', git_default_branch();
		}
	}
else { "Could not create GitLab repo\n" . $tx->res->to_string }



sub git_default_branch {
	# https://github.com/briandfoy/git-default-branch
	chomp( my $branch = `git default-branch` );
	return $branch;
	}
