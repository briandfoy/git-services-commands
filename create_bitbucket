#!/usr/bin/env perl
use v5.10;
use strict;

=head1 NAME

create_bitbucket - Create a BitBucket repo from the command line

=head1 SYNOPSIS

	# I have these set up in my secrets store
	% export BITBUCKET_USER=briandfoy
	% export BITBUCKET_APP_PASSWORD=...
	% export DEFAULT_BITBUCKET_PROJECT=PROJ
	% create_bitbucket

=head1 DESCRIPTION

=cut

my $user = $ENV{BITBUCKET_USER} // die "Set BITBUCKET_USER to your BitBucket account name\n";
my $pass = $ENV{BITBUCKET_APP_PASSWORD} // die "Set BITBUCKET_APP_PASSWORD to your BitBucket app password\nhttps://support.atlassian.com/bitbucket-cloud/docs/app-passwords/\n";
my $repo = $ARGV[0] // do {
	state $r1 = require File::Basename;
	state $r2 = require Cwd;
	File::Basename::basename(Cwd::getcwd());
	};

require Mojo::UserAgent;
my $ua = Mojo::UserAgent->new;

my $url = sprintf 'https://%s:%s@api.bitbucket.org/2.0/repositories/%s/%s',
	$user, $pass,
	$user, $repo;

my $bitbucket_project = $ENV{DEFAULT_BITBUCKET_PROJECT} // 'PROJ';

say "URL: $url";

my $tx = $ua->post(
	$url,
	{ 'Content-type' => 'application/json' },
	json => { project => { key => $bitbucket_project } }
	);

if( $tx->result->is_success ) {
	say "Created Bitbucket repo <$user/$repo>";
	my( $clone ) =
		map  { $_->{href} }
		grep { exists $_->{ssh} }
		$tx->result->json->{links}{clone}->@*;

	say "Clone URL is <$clone>";

	if( -e '.git' ) {
		# https://github.com/briandfoy/git-default-branch
		chomp( my $default_branch = `git default-branch` );
		$default_branch = length $default_branch ? $default_branch : 'master';

		system 'git', 'remote', 'add', 'bitbucket', $clone;
		system 'git', 'push', 'bitbucket', git_default_branch();
		}
	}
else { "Could not create Bitbucket repo\n" . $tx->res->to_string }



sub git_default_branch {
	# https://github.com/briandfoy/git-default-branch
	chomp( my $branch = `git default-branch` );
	return $branch;
	}
